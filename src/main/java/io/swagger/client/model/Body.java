/*
 * Baokim CDN API Documentation
 * Manage & serve Baokim static files
 *
 * OpenAPI spec version: 1.0.0
 * Contact: developer@baokim.vn
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.File;
import java.io.IOException;
/**
 * Body
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-02T10:34:24.815Z[GMT]")
public class Body {
  @SerializedName("folder")
  private String folder = null;

  @SerializedName("access_mode")
  private String accessMode = null;

  @SerializedName("files[]")
  private File files = null;

  public Body folder(String folder) {
    this.folder = folder;
    return this;
  }

   /**
   * folder to store the files
   * @return folder
  **/
  @Schema(description = "folder to store the files")
  public String getFolder() {
    return folder;
  }

  public void setFolder(String folder) {
    this.folder = folder;
  }

  public Body accessMode(String accessMode) {
    this.accessMode = accessMode;
    return this;
  }

   /**
   * access mode of the file, accept values: public/protected
   * @return accessMode
  **/
  @Schema(description = "access mode of the file, accept values: public/protected")
  public String getAccessMode() {
    return accessMode;
  }

  public void setAccessMode(String accessMode) {
    this.accessMode = accessMode;
  }

  public Body files(File files) {
    this.files = files;
    return this;
  }

   /**
   * files to upload
   * @return files
  **/
  @Schema(description = "files to upload")
  public File getFiles() {
    return files;
  }

  public void setFiles(File files) {
    this.files = files;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body body = (Body) o;
    return Objects.equals(this.folder, body.folder) &&
        Objects.equals(this.accessMode, body.accessMode) &&
        Objects.equals(this.files, body.files);
  }

  @Override
  public int hashCode() {
    return Objects.hash(folder, accessMode, files);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body {\n");
    
    sb.append("    folder: ").append(toIndentedString(folder)).append("\n");
    sb.append("    accessMode: ").append(toIndentedString(accessMode)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
